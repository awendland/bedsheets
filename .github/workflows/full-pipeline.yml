name: Full Pipeline

on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    name: Run pre-commit checks
    steps:
      # Steps taken from https://github.com/pre-commit/action
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
      - name: set PY
        run: echo "::set-env name=PY::$(python -c 'import hashlib, sys;print(hashlib.sha256(sys.version.encode()+sys.executable.encode()).hexdigest())')"
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}
      - uses: pre-commit/action@v1.1.0

  scripts-check:
    runs-on: ubuntu-latest
    name: Check non-source code scripts/helpers
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install deps
        run: |
          yarn install --frozen-lockfile
        env:
          CI: true
      - name: Run checks
        run: |
          yarn scripts:check
        env:
          CI: true
          NODE_OPTIONS: --max-old-space-size=4096

  test:
    # This job (and any of its dependents) will be skipped if the commit message
    # contains "no-test" anywhere in it. This is intended to be used when doing things
    # such as quickly iterating on README documentation.
    if: "!contains(github.event.head_commit.message, 'no-test')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ["10.14.2"] # This should match the oldest target node version, as specified by @types/node in the root package.json
    name: Test on node ${{ matrix.node }}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install deps and build
        run: |
          yarn install --frozen-lockfile
          yarn build:all
        env:
          CI: true
          NODE_OPTIONS: --max-old-space-size=4096
      - name: Run tests
        run: |
          yarn test:all:ci
        env:
          CI: true
          NODE_OPTIONS: --max-old-space-size=4096
          TEST_SPREADSHEET_ID: ${{ secrets.TEST_SPREADSHEET_ID }}
          GOOGLE_AUTH_CLIENT_EMAIL: ${{ secrets.GOOGLE_AUTH_CLIENT_EMAIL }}
          GOOGLE_AUTH_PRIVATE_KEY: ${{ secrets.GOOGLE_AUTH_PRIVATE_KEY }}

  docker:
    needs: [test, pre-commit]
    if: >-
      needs.test.result == 'success' && needs.pre-commit.result == 'success'
      && (github.ref == 'refs/heads/master' || contains(github.ref, 'refs/tag'))
    runs-on: ubuntu-latest
    name: Build docker image for REST server
    steps:
      - uses: actions/checkout@v2
      - name: Build & push to Docker Hub
        uses: docker/build-push-action@v1
        with:
          path: .
          dockerfile: docker/rest-server/Dockerfile
          # TODO manually set tag b/c monorepo release tagging doesn't work (the tags are
          # set as 'refs/tags/@bedsheets-rest-server@0.2.0' which needs to be converted into
          # just '0.2.0' for the image tag)
          tag_with_ref: true # refs/head/master will be turned into "latest"
          # add_git_labels: true
          always_pull: true
          repository: bedsheets/rest-server
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build & push to GCR
        uses: docker/build-push-action@v1
        with: # This won't perform much work thanks to cache hits from the prev step
          path: .
          dockerfile: docker/rest-server/Dockerfile
          tag_with_ref: true # refs/head/master will be turned into "latest"
          # add_git_labels: true
          always_pull: false
          registry: gcr.io
          repository: bedsheets/rest-server
          username: _json_key
          password: ${{ secrets.GCR_KEYFILE }}

  update-demo:
    needs: [docker]
    runs-on: ubuntu-latest
    name: Deploy latest Docker image to demo instance on Google Cloud Run
    steps:
      - name: Update demo Google Cloud Run revision
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: bedsheets-demo
          APPLICATION_CREDENTIALS: ${{ secrets.DEMO_INFRA_GAUTH_KEYFILE_BASE64 }}
        with:
          args: run deploy demo-1 --image gcr.io/bedsheets/rest-server:latest --platform managed --region us-central1
